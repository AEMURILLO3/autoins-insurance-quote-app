{"ast":null,"code":"'use client';\n\nimport { jsx } from 'react/jsx-runtime';\nimport { twMerge } from '../../../helpers/tailwind-merge.js';\nimport { useDatePickerContext } from '../DatepickerContext.js';\nimport { startOfYearPeriod, isDateEqual, isDateInRange, Views } from '../helpers.js';\nfunction DatepickerViewsYears() {\n  const {\n    theme: rootTheme,\n    selectedDate,\n    minDate,\n    maxDate,\n    filterDate,\n    viewDate,\n    setViewDate,\n    setView\n  } = useDatePickerContext();\n  const theme = rootTheme.views.years;\n  return /* @__PURE__ */jsx(\"div\", {\n    className: theme.items.base,\n    children: [...Array(12)].map((_year, index) => {\n      const first = startOfYearPeriod(viewDate, 10);\n      const year = first + index;\n      const newDate = new Date(viewDate.getTime());\n      newDate.setFullYear(year);\n      const isSelected = selectedDate && isDateEqual(selectedDate, newDate);\n      const isDisabled = !isDateInRange(newDate, minDate, maxDate) || filterDate && !filterDate(newDate, Views.Years);\n      return /* @__PURE__ */jsx(\"button\", {\n        disabled: isDisabled,\n        type: \"button\",\n        className: twMerge(theme.items.item.base, isSelected && theme.items.item.selected, isDisabled && theme.items.item.disabled),\n        onClick: () => {\n          if (isDisabled) return;\n          setViewDate(newDate);\n          setView(Views.Months);\n        },\n        children: year\n      }, index);\n    })\n  });\n}\nDatepickerViewsYears.displayName = \"DatepickerViewsYears\";\nexport { DatepickerViewsYears };","map":{"version":3,"names":["DatepickerViewsYears","theme","rootTheme","selectedDate","minDate","maxDate","filterDate","viewDate","setViewDate","setView","useDatePickerContext","views","years","jsx","className","items","base","children","Array","map","_year","index","first","startOfYearPeriod","year","newDate","Date","getTime","setFullYear","isSelected","isDateEqual","isDisabled","isDateInRange","Views","Years","disabled","type","twMerge","item","selected","onClick","Months"],"sources":["/Users/vincentpower/DEV/GO_AUTOINS/insurance-quote-app/settings-frontend/node_modules/flowbite-react/src/components/Datepicker/Views/Years.tsx"],"sourcesContent":["\"use client\";\n\nimport { twMerge } from \"../../../helpers/tailwind-merge\";\nimport { useDatePickerContext } from \"../DatepickerContext\";\nimport { isDateEqual, isDateInRange, startOfYearPeriod, Views } from \"../helpers\";\n\nexport interface DatepickerViewsYearsTheme {\n  items: {\n    base: string;\n    item: {\n      base: string;\n      disabled: string;\n      selected: string;\n    };\n  };\n}\n\nexport function DatepickerViewsYears() {\n  const {\n    theme: rootTheme,\n    selectedDate,\n    minDate,\n    maxDate,\n    filterDate,\n    viewDate,\n    setViewDate,\n    setView,\n  } = useDatePickerContext();\n\n  const theme = rootTheme.views.years;\n\n  return (\n    <div className={theme.items.base}>\n      {[...Array(12)].map((_year, index) => {\n        const first = startOfYearPeriod(viewDate, 10);\n        const year = first + index;\n        const newDate = new Date(viewDate.getTime());\n        newDate.setFullYear(year);\n\n        const isSelected = selectedDate && isDateEqual(selectedDate, newDate);\n        const isDisabled =\n          !isDateInRange(newDate, minDate, maxDate) || (filterDate && !filterDate(newDate, Views.Years));\n\n        return (\n          <button\n            disabled={isDisabled}\n            key={index}\n            type=\"button\"\n            className={twMerge(\n              theme.items.item.base,\n              isSelected && theme.items.item.selected,\n              isDisabled && theme.items.item.disabled,\n            )}\n            onClick={() => {\n              if (isDisabled) return;\n\n              setViewDate(newDate);\n              setView(Views.Months);\n            }}\n          >\n            {year}\n          </button>\n        );\n      })}\n    </div>\n  );\n}\n\nDatepickerViewsYears.displayName = \"DatepickerViewsYears\";\n"],"mappings":";;;;;;AAOA,SAAQA,qBAAA;EACR,MAAI;IACAC,KAAA,EAAAC,SAAY;IACZC,YAAO;IACPC,OAAO;IACPC,OAAA;IACAC,UAAQ;IACRC,QAAA;IACAC,WAAA;IACDC;EACD,IAAAC,oBAAwB;EACxB,MAAAT,KAAA,GAAAC,SAAuB,CAAAS,KAAI,CAAAC,KAAO;EACpC,OAAI,eAAcC,GAAA,QAAkB;IAAAC,SAAU,EAAGb,KAAA,CAAAc,KAAA,CAAAC,IAAA;IAAAC,QAAA,MAAAC,KAAA,MAAAC,GAAA,EAAAC,KAAA,EAAAC,KAAA;MAC7C,MAAMC,KAAI,GAAGC,iBAAa,CAAAhB,QAAA;MAC1B,MAAMiB,IAAA,GAAOF,KAAG,GAAID,KAAK;MACzB,MAAAI,OAAQ,OAAYC,IAAI,CAACnB,QAAA,CAAAoB,OAAA;MACzBF,OAAM,CAAAG,WAAa,CAAAJ,IAAA;MACnB,MAAMK,UAAU,GAAG1B,YAAC,IAAc2B,WAAS,CAAA3B,YAAgB,EAACsB,OAAI;MAChE,MAAAM,UAAA,IAAAC,aAA0B,CAAAP,OAAA,EAAArB,OAAA,EAAAC,OAAA,KAAAC,UAAA,KAAAA,UAAA,CAAAmB,OAAA,EAAAQ,KAAA,CAAAC,KAAA;MAC9B,OAAM,eAAQrB,GAAA,CACR,UACN;QACQsB,QAAM,EAAAJ,UAAQ;QACdK,IAAA,UAAW;QACnBtB,SAAgB,EAAAuB,OAAU,CAChBpC,KAAA,CAAAc,KAAU,CAAAuB,IAAI,CAAAtB,IAAM,EACpBa,UAAU,IAAI5B,KAAK,CAACc,KAAK,CAACuB,IAAI,CAACC,QAAA,EAChCR,UAAA,IAAA9B,KAAA,CAAAc,KAAA,CAAAuB,IAAA,CAAAH,QACD;QACRK,OAAc,EAAAA,CAAA;UACJ,IAAAT,UAAY;UACZvB,WAAQ,CAAAiB,OAAM,CAAM;UACrBhB,OAAA,CAAAwB,KAAA,CAAAQ,MAAA;QACD;QACDxB,QAAA,EAAAO;MACD,GACDH,KACD;IACJ;EAAA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}